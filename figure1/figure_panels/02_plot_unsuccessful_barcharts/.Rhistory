library("RSQLite")
con = dbConnect(drv=RSQLite::SQLite(), dbname='../00_data/genera_csvdb')
statement = "SELECT * FROM greengenes_insilico_tax_assignment_summary_table WHERE RDP_Threshold = 80"
df = dbGetQuery(con, statement)
df
rownames(df) <- df$bin
df$bin <- NULL
df$RDP_Threshold <- NULL
df.sum <- sweep(df, 2, apply(df, 2, sum), '/')
df.sum <- df.sum[rownames(df.sum) != 'Species', ]
pptn <- apply(df.sum, 2, sum)*100
class(pptn)
barplot(pptn,
ylab = '% Sequences',
xlab = 'Amplicon',
col='gray35',
ylim=c(0, 60))
box()
ll
con = dbConnect(drv=RSQLite::SQLite(), dbname='../00_data/csvdb')
statement = "SELECT * FROM greengenes_insilco_entropy"
df.ent = dbGetQuery(con, statement)
con = dbConnect(drv=RSQLite::SQLite(), dbname='../00_data/csvdb')
statement = "SELECT * FROM greengenes_insilico_entropy"
df.ent = dbGetQuery(con, statement)
df.ent
df
rownames(df) <- df$bin
df$bin <- NULL
df$RDP_Threshold <- NULL
df.sum <- sweep(df, 2, apply(df, 2, sum), '/')
df.sum <- df.sum[rownames(df.sum) != 'Species', ]
dbDisconnect()
dbDisconnect(con)
rownames(df) <- df$bin
df$bin <- NULL
df$RDP_Threshold <- NULL
df.sum <- sweep(df, 2, apply(df, 2, sum), '/')
df.sum <- df.sum[rownames(df.sum) != 'Species', ]
pptn <- apply(df.sum, 2, sum)*100
pptn
library("RSQLite")
con = dbConnect(drv=RSQLite::SQLite(), dbname='../00_data/genera_csvdb')
statement = "SELECT * FROM greengenes_insilico_tax_assignment_summary_table WHERE RDP_Threshold = 80"
df = dbGetQuery(con, statement)
dbDisconnect(con)
df
rownames(df) <- df$bin
df$bin <- NULL
df$RDP_Threshold <- NULL
df.sum <- sweep(df, 2, apply(df, 2, sum), '/')
df.sum <- df.sum[rownames(df.sum) != 'Species', ]
pptn <- apply(df.sum, 2, sum)*100
pptn
class(pptn)
as.data.frame(pptn)
df.ent
row.names(df.ent) <- df.ent$Amplicon
df.ent
merge(df.ppn, df.end, by='row.names')
merge(df.pptn, df.end, by='row.names')
df.pptn <- as.data.frame(pptn)
merge(df.pptn, df.end, by='row.names')
merge(df.pptn, df.ent, by='row.names')
df.plt <- merge(df.pptn, df.ent, by='row.names')
row.names(df.plt) <- df.plt$Row.names
df.plt
df.plt <- df.plt[,-1]
df.plt
df.plt
df.plt$perBaseEntropy <- df.plt$MedianEntropy/(max(df.plt$MedianEntropy))
df.plt
pallete <- colorRampPalette(c('gray87', 'blue4'))(100)
barplot(df.plt$pptn,
ylab = '% Sequences',
xlab = 'Amplicon',
col=pallete[cut(df.plt$perBaseEntropy, 100)],
ylim=c(0, 60))
box()
barplot(df.plt$pptn,
ylab = '% Sequences',
xlab = 'Amplicon',
col=pallete[cut(df.plt$perBaseEntropy, 100)],
ylim=c(0, 60),
las=1,
cex.axis=0.5,
cex.names=0.5,
cex.lab=0.5))
barplot(df.plt$pptn,
ylab = '% Sequences',
xlab = 'Amplicon',
col=pallete[cut(df.plt$perBaseEntropy, 100)],
ylim=c(0, 60),
las=1,
cex.axis=0.5,
cex.names=0.5,
cex.lab=0.5)
box()
par(mar=c(3,3,1,1), las=1)
barplot(df.plt$pptn,
ylab = '% Sequences',
xlab = 'Amplicon',
col=pallete[cut(df.plt$perBaseEntropy, 100)],
ylim=c(0, 60),
las=1,
cex.axis=0.5,
cex.names=0.5,
cex.lab=0.5)
box()
par(mar=c(3,3,1,1), las=1)
barplot(df.plt$pptn,
names.arg=df.plt$Amplicon,
ylab = '% Sequences',
xlab = 'Amplicon',
col=pallete[cut(df.plt$perBaseEntropy, 100)],
ylim=c(0, 60),
las=1,
cex.axis=0.5,
cex.names=0.5,
cex.lab=0.5)
box()
pallete <- colorRampPalette(c('deepskyblue', 'deepskyblue4'))(100)
par(mar=c(3,3,1,1), las=1)
barplot(df.plt$pptn,
names.arg=df.plt$Amplicon,
ylab = '% Sequences',
xlab = 'Amplicon',
col=pallete[cut(df.plt$perBaseEntropy, 100)],
ylim=c(0, 60),
las=1,
cex.axis=0.5,
cex.names=0.5,
cex.lab=0.5)
box()
pallete <- colorRampPalette(c('dodgerblue', 'dodgeryblue4'))(100)
par(mar=c(3,3,1,1), las=1)
barplot(df.plt$pptn,
names.arg=df.plt$Amplicon,
ylab = '% Sequences',
xlab = 'Amplicon',
col=pallete[cut(df.plt$perBaseEntropy, 100)],
ylim=c(0, 60),
las=1,
cex.axis=0.5,
cex.names=0.5,
cex.lab=0.5)
box()
pallete <- colorRampPalette(c('dodgerblue', 'dodgeryblue4'))(100)
pallete <- colorRampPalette(c('dodgerblue', 'dodgerblue4'))(100)
par(mar=c(3,3,1,1), las=1)
barplot(df.plt$pptn,
names.arg=df.plt$Amplicon,
ylab = '% Sequences',
xlab = 'Amplicon',
col=pallete[cut(df.plt$perBaseEntropy, 100)],
ylim=c(0, 60),
las=1,
cex.axis=0.5,
cex.names=0.5,
cex.lab=0.5)
box()
pallete <- colorRampPalette(c('azure', 'azure4'))(100)
par(mar=c(3,3,1,1), las=1)
barplot(df.plt$pptn,
names.arg=df.plt$Amplicon,
ylab = '% Sequences',
xlab = 'Amplicon',
col=pallete[cut(df.plt$perBaseEntropy, 100)],
ylim=c(0, 60),
las=1,
cex.axis=0.5,
cex.names=0.5,
cex.lab=0.5)
box()
pdf('../01b_pptn_sequences_unsucceffully_assigned.pdf',
width=4, height=2.5)
barplot(df.plt$pptn,
names.arg=df.plt$Amplicon,
ylab = '% Sequences',
xlab = 'Amplicon',
col=pallete[cut(df.plt$perBaseEntropy, 100)],
ylim=c(0, 60),
las=1,
cex.axis=0.5,
cex.names=0.5,
cex.lab=0.5)
box()
dev.off()
